package com.fhr.smackjsdemo.smackmodels;

import java.awt.Image;
import java.io.File;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.jivesoftware.smack.Chat;
import org.jivesoftware.smack.MessageListener;
import org.jivesoftware.smack.RosterEntry;
import org.jivesoftware.smack.RosterGroup;
import org.jivesoftware.smack.XMPPConnection;
import org.jivesoftware.smack.packet.Presence.Type;
import org.jivesoftware.smackx.muc.HostedRoom;
import org.jivesoftware.smackx.muc.MultiUserChat;
import org.jivesoftware.smackx.packet.VCard;

import com.fhr.smackjsdemo.utils.XMPPUtil;

/**
 * XMPPConnection对象包装器
 * @author fhr
 * @date 2017/04/24 
 */
public class XMPPConnectionWrapper implements IXMPConnectionWrapper{
	
	private XMPPConnection xmppConnection;
	
	public XMPPConnectionWrapper(XMPPConnection xmppConnection){
		this.setXmppConnection(xmppConnection);
	}

	public XMPPConnection getXmppConnection() {
		return xmppConnection;
	}

	public void setXmppConnection(XMPPConnection xmppConnection) {
		this.xmppConnection = xmppConnection;
	}
 
	@Override
	public boolean login(String userName, String password) {
		return XMPPUtil.login(xmppConnection, userName, password);
	}

	@Override
	public boolean connect() {
		return XMPPUtil.connectServer(xmppConnection);
	}

	@Override
	public void disConnect() {
		if(xmppConnection.isConnected()){
			xmppConnection.disconnect();
		}
	}

	@Override
	public boolean setPresence(Type type, String status) {
		return XMPPUtil.setPresence(xmppConnection, type, status);
	}

	@Override
	public Chat createChat(String toUser, MessageListener messageListener) {
		return XMPPUtil.createChat(xmppConnection, toUser, messageListener);
	}

	@Override
	public boolean sendMessage(Chat chat, String message) {
		return XMPPUtil.sendMessage(chat, message);
	}

	@Override
	public List<RosterEntry> getAllRosterEntry() {
		return XMPPUtil.getAllRosterEntry(xmppConnection);
	}

	@Override
	public List<RosterGroup> getAllRosterGroup(XMPPConnection xmppConnection) {
		return XMPPUtil.getAllRosterGroup(xmppConnection);
	}

	@Override
	public List<RosterEntry> getRosterEntrysForGroup(String groupName) {
		retu XMPPUtil.getRosterEntrysForGroup(groupName);
	}

	@Override
	public VCard getUserVCard(String user) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Image getUserImage(String user) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean addGroup(String groupName) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean removeGroup(XMPPConnection xmppConnection, String groupName) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean addUserNoGroup(String userName, String name) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean addUserHaveGroup(String userName, String name, String groupName) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean removeUser(String userName) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public List<HashMap<String, String>> searchUsers(String userName) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void changeStateMessage(String status) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public boolean changeUserImage(File file) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean deleteAccount() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean changePassword(String password) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public List<HostedRoom> getHostRooms() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public MultiUserChat createRoom(String roomName, String password) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public MultiUserChat joinMultiUserChat(String roomName, String password) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<String> findUsersInMultiUserChat(MultiUserChat multiUserChat) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean sendFileToUser(String toUser, String fileName, String remark) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public Map<String, List<HashMap<String, String>>> getOfflnMessage() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int isUserOnLine(String user) {
		// TODO Auto-generated method stub
		return 0;
	}
	
}
